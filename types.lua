--- @class TheFamilyGroupOptions: table
--- @field key string Unique key
--- @field order? number Value user for sorting, from lowest to highest
--- @field enabled? fun(definition: TheFamilyGroup): boolean Function which determines can tabs inside this group be created

--- @class TheFamilyTabOptions: table
--- @field key string Unique key
--- @field group_key string Unique key of group to be assigned for
--- @field order? number Value user for sorting, from lowest to highest
--- @field type? "switch"|"overlay" Determines highlight behaviour: only one tab with type `overlay` can be selected at a time; `switch` is independent. (default is `overlay`)
--- @field keep? boolean Should prevent tab from deselecting when another page is opened
--- @field front? string Key from G.P_CARDS to set card's front
--- @field center? string | fun(definition: TheFamilyTab, area: CardArea): Card Key from G.P_CENTERS, or function which return fully created card (`create_card()` or `SMODS.create_card()`, for example). **DO NOT EMPLACE IT!**
--- @field front_label? fun(definition: TheFamilyTab, card: Card): { text?: string, colour?: table, scale?: number } | { remove: true } Function which returns: config for displaying text on a card, or table with `remove = true` for cleaning up
--- @field popup? fun(definition: TheFamilyTab, card: Card): { name?: table, description?: table[] } Function which returns config for displaying popup on hover. Rerenders when tab is (de)selected, use `card.highlighted` to determine is tab selected
--- @field keep_popup_when_highlighted? boolean When set to `true` and card is highlighted, popup will stay even if card will be not hovered
--- @field alert? fun(definition: TheFamilyTab, card: Card): table | { definition_function: fun(): { definition: table, config: table } } | { remove: true } Function which returns: config for vanilla `create_UIBox_card_alert()` function, or function which returns custom definition for it, or table with `remove = true` for cleaning up
--- @field can_highlight? fun(definition: TheFamilyTab, card?: Card): boolean Function which controls can card be highlighted. When value will change to `false`, card will automatically unhighlight. If `keep = true`, callback can be called without card object if tab is selected but not rendered in current page
--- @field highlight? fun(definition: TheFamilyTab, card: Card) Callback when card is highlighted
--- @field unhighlight? fun(definition: TheFamilyTab, card?: Card) Callback when card is unhighlighted. If `type = overlay` and `keep = true`, callback can be called without card object when it needs to be deselected but not rendered in current page
--- @field click? fun(definition: TheFamilyTab, card: Card): boolean Callback when card is clicked. If callback returns `true`, other events will not be fired (ex. card highlight)
--- @field update? fun(definition: TheFamilyTab, card?: Card, dt: number) Update function. Happends before setting all popups, alerts, etc. If `keep = true`, callback can be called without card object if tab is selected but not rendered in current page
--- @field enabled? fun(definition: TheFamilyTab): boolean Function which determines can this tab be created

--- @class TheFamilyTab: TheFamilyTabOptions
--- @field group TheFamilyGroup
--- @field is_enabled boolean
--- @field card? Card Card which represents tab
--- @field rerender_front_label fun() Function to manually rerender front_label
--- @field rerender_popup fun() Function to manually rerender popup
--- @field rerender_alert fun() Function to manually rerender alert

--- @class TheFamilyGroup: TheFamilyGroupOptions
--- @field tabs TheFamilyTab[]
--- @field enabled_tabs TheFamilyTab[]
--- @field is_enabled boolean
